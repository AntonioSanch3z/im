---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  analyticstracking.php: |
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script>
    </script>
  default.conf:  |
    server {
          listen         80;
          server_name    <server_name>;
          return         301 https://$server_name$request_uri;
    }
    server {
      listen        443 ssl;
      server_name  <server_name>;
      access_log   /var/log/nginx/access.log  combined;
      send_timeout 600;
      large_client_header_buffers 4 32k;
      ssl on;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_certificate      /etc/nginx/server.crt;
      ssl_certificate_key  /etc/nginx/server.key;
      location /im/ {
        proxy_pass              http://<im_backend_svc_ip>/;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto https;
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Forwarded-Prefix /im;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
      }
      location /im-web/ {
        proxy_pass              http://<im_web_svc_ip>/im-web/;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto https;
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Forwarded-Prefix /im-web;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
      }
      location / {
          root /usr/share/nginx/html;
          index index.html;
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: nginx
data:
  # this can be moved to a secret
  server.crt: "-----BEGIN CERTIFICATE-----\n\n-----END CERTIFICATE-----\n"
  server.key: "-----BEGIN PRIVATE KEY-----\n\n-----END PRIVATE KEY-----\n"

# Deployments for the nginx service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  nginx
spec:
  selector:
    matchLabels:
      name: nginx
  replicas: 2
  template:
    metadata:
      labels:
        name:  nginx
    spec:
      nodeSelector:
        role: ingress-controller
      containers:
        - name: nginx
          image:  nginx
          ports:
          - containerPort: 443
            name: https
          - containerPort: 80
            name: http
          volumeMounts:
           - name: nginx-cm
             mountPath: /etc/nginx/conf.d/default.conf 
             subPath: default.conf
           - name: nginx-sec
             mountPath: /etc/nginx/server.key
             subPath: server.key
           - name: nginx-sec
             mountPath: /etc/nginx/server.crt
             subPath: server.crt
          livenessProbe:
            httpGet:
              path: /
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 20
      volumes:
        - name: nginx-cm
          configMap:
            name: nginx
        - name: nginx-sec
          secret:
            secretName: nginx

# Service for the nginx service
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    nodePort: 30180
  - name: https
    port: 443
    nodePort: 31443
  selector:
    name: nginx
